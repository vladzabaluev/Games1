// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Spheres
#include "Random.cginc"

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWStructuredBuffer<float3> Result;
uniform float Time;

[numthreads(64,1,1)]

void Spheres (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    float3 baseDir = normalize(rand1dTo3d(id.x) - 0.5) 
        * (rand1dTo3d(id.x) * 0.9 + 0.1);
    float3 orthogonal = normalize(cross(baseDir, rand1dTo3d(id.x + 7.1393) - 0.5)) 
        * (rand1dTo3d(id.x + 3.7443) * 0.9 + 0.1);
    float scaledTime = Time * 2 + rand1dTo3d(id.x) * 712.131234;
    float3 dir = baseDir * sin(scaledTime) + orthogonal * cos(scaledTime);
    Result[id.x] = dir * 20;  
}
